name: Frontend CI

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: frontend/evidencaLetenja/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/evidencaLetenja/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install dependencies
        run: |
          cd frontend/evidencaLetenja
          npm ci

      - name: Build application
        run: |
          cd frontend/evidencaLetenja
          npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/evidencaLetenja/build/
          if-no-files-found: error

  test-frontend:
    needs: build-frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: frontend/evidencaLetenja/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/evidencaLetenja/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install dependencies
        run: |
          cd frontend/evidencaLetenja
          npm ci

      - name: Run tests with coverage
        run: |
          cd frontend/evidencaLetenja
          npm run test:ci

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/evidencaLetenja/coverage/
          if-no-files-found: error

  dockerize-and-push:
    needs: test-frontend
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/develop' && 'Development' || 'Production' }} # Dynamically set the environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
  
      - name: Build Docker image
        run: |
          # Determine the tag based on the branch
          if [ "${GITHUB_REF}" == "refs/heads/develop" ]; then
            TAG="dev"
          elif [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            TAG="prod"
          fi
  
          # Build the Docker image and tag it accordingly
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:${TAG} ./frontend/evidencaLetenja
          docker tag ${{ secrets.DOCKER_USERNAME }}/frontend:${TAG} ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}
  
      - name: Push Docker image to Docker Hub
        run: |
          # Push both the latest and specific commit tags
          if [ "${GITHUB_REF}" == "refs/heads/develop" ]; then
            TAG="dev"
          elif [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            TAG="prod"
          fi
  
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${TAG}
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}

  deploy-frontend:
    needs: test-frontend 
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        if: github.ref == 'refs/heads/develop'
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL_FRONTEND }}
        run: |
          curl "$deploy_url"


  